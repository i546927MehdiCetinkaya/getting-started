name: GettingStarted_Container_Workflow

on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout GitHub Action
        uses: actions/checkout@v3

      # Login via Azure CLI
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Azure Container Registry login
      - name: Azure Container Registry Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Build and push Docker image to Azure Container Registry
      - name: Docker build and push
        run: |
          echo "Building and pushing image..."
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}

      # Delete existing ACI (if exists)
      - name: Delete existing ACI if it exists
        run: |
          az container delete --name getting-started --resource-group ${{ secrets.RESOURCE_GROUP }} --yes
        env:
          AZURE_AUTHORITY_HOST: ${{ secrets.AZURE_AUTHORITY_HOST }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # Deploy to Azure Container Instances
      - name: Deploy to Azure Container Instances
        uses: azure/aci-deploy@v1
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: ${{ secrets.RESOURCE_GROUP }}-${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: getting-started  # Name of the container instance
          location: west europe
          ports: 3000
          cpu: 1
          memory: 1.5
          os-type: Linux
          protocol: TCP
          restart-policy: Always
